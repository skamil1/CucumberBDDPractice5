<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>CucumberBDDPractice</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
                <!-- This dependency for REST -->
                <dependency>
                    <groupId>io.rest-assured</groupId>
                    <artifactId>rest-assured</artifactId>
                    <version>5.2.1</version>
                </dependency>
                <!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->
                <dependency>
                    <groupId>org.seleniumhq.selenium</groupId>
                    <artifactId>selenium-java</artifactId>
                    <version>4.15.0</version>
                </dependency>

                <!-- https://mvnrepository.com/artifact/io.github.bonigarcia/webdrivermanager -->
                <dependency>
                    <groupId>io.github.bonigarcia</groupId>
                    <artifactId>webdrivermanager</artifactId>
                    <version>5.5.3</version>
                </dependency>

                <!-- https://mvnrepository.com/artifact/com.github.javafaker/javafaker -->
                <dependency>
                    <groupId>com.github.javafaker</groupId>
                    <artifactId>javafaker</artifactId>
                    <version>1.0.2</version>
                </dependency>

                <!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-junit -->
                <dependency>
                    <groupId>io.cucumber</groupId>
                    <artifactId>cucumber-junit</artifactId>
                    <version>7.3.2</version>
                    <scope>test</scope>
                </dependency>

                <!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-java -->
                <dependency>
                    <groupId>io.cucumber</groupId>
                    <artifactId>cucumber-java</artifactId>
                    <version>7.4.1</version>
                </dependency>

                <dependency>
                    <groupId>me.jvt.cucumber</groupId>
                    <artifactId>reporting-plugin</artifactId>
                    <version>7.3.0</version>
                </dependency>


                <dependency>
                    <groupId>mysql</groupId>
                    <artifactId>mysql-connector-java</artifactId>
                    <version>8.0.25</version>
                </dependency>


                <dependency>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-databind</artifactId>
                    <version>2.13.0</version>
                </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>RELEASE</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml-schemas -->
        <!-- https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>5.2.5</version>
        </dependency>



        <dependency>
            <groupId>com.oracle.database.jdbc</groupId>
            <artifactId>ojdbc11</artifactId>
            <version>21.8.0.0</version>
        </dependency>

        <!--        Deserialization
 if you want to convert your JSON to Java collections(map,list,custom class). this is called Deserialization
To do that we need to add jackson dependency
 -->

                <dependency>
                    <groupId>org.projectlombok</groupId>
                    <artifactId>lombok</artifactId>
                    <version>1.18.22</version>
                    <scope>test</scope>
                </dependency>
        <!-- Lombok Annotations —> will help us to write boiler plate codes (getter,setter,constr,toString etc ) easily with following annotations
@Data —> includes Getter + Setter + ToString and more (RequiredArgConstr … )
We must use either Data annotation or Getter + Setter + ToString to do deserilization
JSON to Java Object ( POJO —> Plain Old Java Object )
NOTE response.as() method will not accept parameter to get specific part of response.That is why in following example we cant use response path .-->



            </dependencies>

</project>